services:
    app:
        build: .
        container_name: postnova-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
        environment:
            - DB_HOST=db
            - DB_PORT=5432
            - DB_DATABASE=${DB_DATABASE}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
        depends_on:
            db:
                condition: service_healthy
        networks:
            - postnova-network

    webserver:
        image: nginx:alpine
        container_name: postnova-webserver
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - postnova-network

    db:
        image: postgres:15
        container_name: postnova-db
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
            interval: 5s
            timeout: 5s
            retries: 5
        networks:
            - postnova-network

    npm:
        image: node:20
        container_name: postnova-npm
        working_dir: /var/www
        volumes:
            - .:/var/www
        entrypoint: ['tail', '-f', '/dev/null']
        networks:
            - postnova-network

volumes:
    postgres_data:
networks:
    postnova-network:
        external: true
